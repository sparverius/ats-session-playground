;;
;;By [patsolve_smt2]:
;;
(declare-sort stype 0)
(declare-sort s2rt_cls 0)
(declare-sort s2rt_eff 0)
(declare-sort s2rt_prop 0)
(declare-sort s2rt_t0ype 0)
(declare-sort s2rt_tkind 0)
(declare-sort s2rt_error 0)
(define-sort s2rt_int () Int)
(define-sort s2rt_addr () Int)
(define-sort s2rt_bool () Bool)
(define-sort file_mode () Int)
(define-sort s2rt_view () s2rt_prop)
(define-sort s2rt_type () s2rt_t0ype)
(define-sort s2rt_vtype () s2rt_t0ype)
(define-sort s2rt_vt0ype () s2rt_t0ype)
(define-fun unit_p () Bool true)
(define-fun s2exp_fun ((x Bool)) Bool x)
(define-fun s2exp_eqeq ((x Bool)) Bool x)
(define-fun s2exp_metdec ((x Bool)) Bool x)
(declare-fun s2exp_sizeof (s2rt_t0ype) Int)
(define-fun neg_int ((x Int)) Int (- x))
(define-fun abs_int ((x Int)) Int (abs x))
(define-fun add_int_int ((x Int) (y Int)) Int (+ x y))
(define-fun sub_int_int ((x Int) (y Int)) Int (- x y))
(define-fun mul_int_int ((x Int) (y Int)) Int (* x y))
(define-fun div_int_int ((x Int) (y Int)) Int (div x y))
(define-fun mod_int_int ((x Int) (y Int)) Int (mod x y))
(define-fun idiv_int_int ((x Int) (y Int)) Int (div x y))
(define-fun ndiv_int_int ((x Int) (y Int)) Int (div x y))
(define-fun eq_int_int ((x Int) (y Int)) Bool (= x y))
(define-fun lt_int_int ((x Int) (y Int)) Bool (< x y))
(define-fun gt_int_int ((x Int) (y Int)) Bool (> x y))
(define-fun lte_int_int ((x Int) (y Int)) Bool (<= x y))
(define-fun gte_int_int ((x Int) (y Int)) Bool (>= x y))
(define-fun neq_int_int ((x Int) (y Int)) Bool (not (= x y)))
(define-fun max_int_int ((x Int) (y Int)) Int (ite (>= x y) x y))
(define-fun min_int_int ((x Int) (y Int)) Int (ite (<= x y) x y))
(define-fun sgn_int ((x Int)) Int (ite (> x 0) 1 (ite (>= x 0) 0 (- 1))))
(define-fun null_addr () s2rt_addr 0)
(define-fun add_addr_int ((x s2rt_addr) (y Int)) s2rt_addr (+ x y))
(define-fun sub_addr_int ((x s2rt_addr) (y Int)) s2rt_addr (- x y))
(define-fun eq_addr_addr ((x s2rt_addr) (y s2rt_addr)) Bool (= x y))
(define-fun lt_addr_addr ((x s2rt_addr) (y s2rt_addr)) Bool (< x y))
(define-fun gt_addr_addr ((x s2rt_addr) (y s2rt_addr)) Bool (> x y))
(define-fun lte_addr_addr ((x s2rt_addr) (y s2rt_addr)) Bool (<= x y))
(define-fun gte_addr_addr ((x s2rt_addr) (y s2rt_addr)) Bool (>= x y))
(define-fun neq_addr_addr ((x s2rt_addr) (y s2rt_addr)) Bool (not (= x y)))
(define-fun true_bool () Bool true)
(define-fun false_bool () Bool false)
(define-fun neg_bool ((x Bool)) Bool (not x))
(define-fun add_bool_bool ((x Bool) (y Bool)) Bool (or x y))
(define-fun mul_bool_bool ((x Bool) (y Bool)) Bool (and x y))
(define-fun eq_bool_bool ((x Bool) (y Bool)) Bool (= x y))
(define-fun lt_bool_bool ((x Bool) (y Bool)) Bool (and (not x) y))
(define-fun gt_bool_bool ((x Bool) (y Bool)) Bool (and x (not y)))
(define-fun neq_bool_bool ((x Bool) (y Bool)) Bool (not (= x y)))
(define-fun lte_bool_bool ((x Bool) (y Bool)) Bool (or (not x) y))
(define-fun gte_bool_bool ((x Bool) (y Bool)) Bool (or x (not y)))
;;
;;emit_the_s2cstmap()
;;
(declare-fun pmsg!772 (s2rt_int s2rt_vt0ype) stype)
(declare-fun pseq!773 (stype stype) stype)
(declare-fun pend!775 (s2rt_int) stype)
(declare-fun pfix!778 ((Array stype stype)) stype)
(declare-fun chan!782 (s2rt_int stype) s2rt_vtype)
;;
;;ATS-constraints
;;generated during typechecking
;;
(push 1)
(push 1)
(push 1)
(declare-fun x!4367 () stype)
(push 1)
(push 1)
(assert (not (add_bool_bool (eq_int_int 0 0) (eq_int_int 0 1))))
(echo "/Users/hwwu/Git/ats-session-playground/dependent/tests/poly.dats: 256(line=18, offs=27) -- 256(line=18, offs=27)")
(check-sat)
(pop 1)
(pop 1)
(push 1)
(push 1)
(assert (not (add_bool_bool (eq_int_int 1 0) (eq_int_int 1 1))))
(echo "/Users/hwwu/Git/ats-session-playground/dependent/tests/poly.dats: 256(line=18, offs=27) -- 256(line=18, offs=27)")
(check-sat)
(pop 1)
(pop 1)
(push 1)
(push 1)
(assert (not (neq_int_int 1 0)))
(echo "/Users/hwwu/Git/ats-session-playground/dependent/tests/poly.dats: 256(line=18, offs=27) -- 256(line=18, offs=27)")
(check-sat)
(pop 1)
(pop 1)
(push 1)
(push 1)
(assert (not (add_bool_bool (eq_int_int 0 0) (eq_int_int 0 1))))
(echo "/Users/hwwu/Git/ats-session-playground/dependent/tests/poly.dats: 274(line=19, offs=14) -- 274(line=19, offs=14)")
(check-sat)
(pop 1)
(pop 1)
(push 1)
(push 1)
(assert (not (add_bool_bool (eq_int_int 1 0) (eq_int_int 1 1))))
(echo "/Users/hwwu/Git/ats-session-playground/dependent/tests/poly.dats: 274(line=19, offs=14) -- 274(line=19, offs=14)")
(check-sat)
(pop 1)
(pop 1)
(push 1)
(push 1)
(assert (not (neq_int_int 1 0)))
(echo "/Users/hwwu/Git/ats-session-playground/dependent/tests/poly.dats: 274(line=19, offs=14) -- 274(line=19, offs=14)")
(check-sat)
(pop 1)
(pop 1)
(push 1)
(push 1)
(assert (not (add_bool_bool (eq_int_int 0 0) (eq_int_int 0 1))))
(echo "/Users/hwwu/Git/ats-session-playground/dependent/tests/poly.dats: 297(line=20, offs=19) -- 297(line=20, offs=19)")
(check-sat)
(pop 1)
(pop 1)
(push 1)
(push 1)
(assert (not (add_bool_bool (eq_int_int 1 0) (eq_int_int 1 1))))
(echo "/Users/hwwu/Git/ats-session-playground/dependent/tests/poly.dats: 297(line=20, offs=19) -- 297(line=20, offs=19)")
(check-sat)
(pop 1)
(pop 1)
(push 1)
(push 1)
(declare-fun x!4368 () stype)
(push 1)
(declare-fun p$961$962!4377 () stype)
(push 1)
(push 1)
(assert (not (add_bool_bool (eq_int_int 0 0) (eq_int_int 0 1))))
(echo "/Users/hwwu/Git/ats-session-playground/dependent/tests/poly.dats: 437(line=23, offs=20) -- 437(line=23, offs=20)")
(check-sat)
(pop 1)
(pop 1)
(push 1)
(push 1)
(assert (not (add_bool_bool (eq_int_int 0 0) (eq_int_int 0 1))))
(echo "/Users/hwwu/Git/ats-session-playground/dependent/tests/poly.dats: 462(line=24, offs=21) -- 462(line=24, offs=21)")
(check-sat)
(pop 1)
(pop 1)
(push 1)
(push 1)
(assert (not (add_bool_bool (eq_int_int 1 0) (eq_int_int 1 1))))
(echo "/Users/hwwu/Git/ats-session-playground/dependent/tests/poly.dats: 462(line=24, offs=21) -- 462(line=24, offs=21)")
(check-sat)
(pop 1)
(pop 1)
(push 1)
(push 1)
(assert (not (neq_int_int 1 0)))
(echo "/Users/hwwu/Git/ats-session-playground/dependent/tests/poly.dats: 462(line=24, offs=21) -- 462(line=24, offs=21)")
(check-sat)
(pop 1)
(pop 1)
(push 1)
(declare-fun p$955!4370 () stype)
(declare-fun q$956!4371 () stype)
(assert (s2exp_eqeq (= p$961$962!4377 q$956!4371)))
(declare-const a (Array stype stype))
(assert (s2exp_eqeq (= p$955!4370 (pseq!773 (pmsg!772 0 (chan!782 1 x!4368)) (pfix!778 a)))))
(assert (s2exp_eqeq (= q$956!4371 (pend!775 1))))
(push 1)
(push 1)
(assert (not (add_bool_bool (eq_int_int 0 0) (eq_int_int 0 1))))
(echo "/Users/hwwu/Git/ats-session-playground/dependent/tests/poly.dats: 510(line=27, offs=21) -- 510(line=27, offs=21)")
(check-sat)
(pop 1)
(pop 1)
(push 1)
(push 1)
(assert (not (add_bool_bool (eq_int_int 1 0) (eq_int_int 1 1))))
(echo "/Users/hwwu/Git/ats-session-playground/dependent/tests/poly.dats: 510(line=27, offs=21) -- 510(line=27, offs=21)")
(check-sat)
(pop 1)
(pop 1)
(push 1)
(push 1)
(assert (not (neq_int_int 1 0)))
(echo "/Users/hwwu/Git/ats-session-playground/dependent/tests/poly.dats: 510(line=27, offs=21) -- 510(line=27, offs=21)")
(check-sat)
(pop 1)
(pop 1)
(push 1)
(pop 1)
(pop 1)
(push 1)
(declare-fun p$957!4372 () stype)
(declare-fun q$958!4373 () stype)
(assert (s2exp_eqeq (= p$961$962!4377 p$957!4372)))
(declare-const a (Array stype stype))
(assert (s2exp_eqeq (= p$957!4372 (pseq!773 (pmsg!772 0 (chan!782 1 x!4368)) (pfix!778 a)))))
(assert (s2exp_eqeq (= q$958!4373 (pend!775 1))))
(push 1)
(push 1)
(assert (not (add_bool_bool (eq_int_int 1 0) (eq_int_int 1 1))))
(echo "/Users/hwwu/Git/ats-session-playground/dependent/tests/poly.dats: 552(line=30, offs=14) -- 568(line=30, offs=30)")
(check-sat)
(pop 1)
(pop 1)
(push 1)
(push 1)
(assert (not (add_bool_bool (eq_int_int 0 0) (eq_int_int 0 1))))
(echo "/Users/hwwu/Git/ats-session-playground/dependent/tests/poly.dats: 552(line=30, offs=14) -- 568(line=30, offs=30)")
(check-sat)
(pop 1)
(pop 1)
(push 1)
(push 1)
(assert (not (neq_int_int 1 0)))
(echo "/Users/hwwu/Git/ats-session-playground/dependent/tests/poly.dats: 568(line=30, offs=30) -- 568(line=30, offs=30)")
(check-sat)
(pop 1)
(pop 1)
(push 1)
(pop 1)
(push 1)
(push 1)
(assert (not (add_bool_bool (eq_int_int 0 0) (eq_int_int 0 1))))
(echo "/Users/hwwu/Git/ats-session-playground/dependent/tests/poly.dats: 603(line=31, offs=17) -- 603(line=31, offs=17)")
(check-sat)
(pop 1)
(pop 1)
(push 1)
(push 1)
(assert (not (add_bool_bool (eq_int_int 0 0) (eq_int_int 0 1))))
(echo "/Users/hwwu/Git/ats-session-playground/dependent/tests/poly.dats: 603(line=31, offs=17) -- 603(line=31, offs=17)")
(check-sat)
(pop 1)
(pop 1)
(push 1)
(push 1)
(assert (not (eq_int_int 0 0)))
(echo "/Users/hwwu/Git/ats-session-playground/dependent/tests/poly.dats: 603(line=31, offs=17) -- 603(line=31, offs=17)")
(check-sat)
(pop 1)
(pop 1)
(push 1)
(pop 1)
(pop 1)
(pop 1)
(pop 1)
(pop 1)
(push 1)
(push 1)
(assert (not (s2exp_eqeq (= S2Eerror() S2Eerror()))))
(echo "/Users/hwwu/Git/ats-session-playground/dependent/tests/poly.dats: 669(line=37, offs=12) -- 671(line=37, offs=14)")
(check-sat)
(pop 1)
(pop 1)
(pop 1)
(pop 1)
(pop 1)
