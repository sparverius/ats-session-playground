{"filter":false,"title":"client.dats","tooltip":"/client.dats","undoManager":{"mark":100,"position":100,"stack":[[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":273,"column":0},"action":"insert","lines":["(*","** Erathosthene's sieve","*)","","(* ****** ****** *)","","%{^","//","#include <pthread.h>","//","%} // end of [%{^]","","(* ****** ****** *)","//","#include","\"share/atspre_staload.hats\"","//","(* ****** ****** *)","","staload","UNISTD = \"libc/SATS/unistd.sats\"","","(* ****** ****** *)","//","staload \"./../SATS/basis.sats\"","staload \"./../SATS/co-list.sats\"","//","(* ****** ****** *)","","staload","_ = \"libats/DATS/deqarray.dats\"","","(* ****** ****** *)","//","staload","_ = \"libats/DATS/athread.dats\"","staload","_ = \"libats/DATS/athread_posix.dats\"","//","(* ****** ****** *)","//","staload _ = \"./../DATS/basis_chan.dats\"","staload _ = \"./../DATS/basis_chan2.dats\"","//","staload _ = \"./../DATS/basis_ssntyp.dats\"","//","staload _(*anon*) = \"./../DATS/co-list.dats\"","//","(* ****** ****** *)","//","extern","fun","ints_from (n: int): channeg(sslist(int))","//","extern","fun","ints_filter","  (channeg(sslist(int)), n: int): channeg(sslist(int))","//","(* ****** ****** *)","  ","implement","ints_from (n) = let","//","fun","fserv","(","  chp: chanpos(sslist(int)), n: int",") : void = let","//","val opt = chanpos_list (chp)","//","in","//","case+ opt of","| chanpos_list_nil() =>","    chanpos_nil_wait(chp)","| chanpos_list_cons() =>","    (chanpos_send<int>(chp, n); fserv(chp, n+1))","//","end // end of [fserv]","//","in","  channeg_create_exn(llam(chp) => fserv(chp, n))","end // end of [ints_from]","","(* ****** ****** *)","","implement","ints_filter","  (chn, n) = let","//","fun","getfst","(","  chn: !channeg(sslist(int))",") : int = let","//","val () = channeg_list_cons(chn)","val fst = channeg_send_val(chn)","//","in","  if fst mod n > 0 then fst else getfst(chn)","end // end of [getfst]","//","fun","fserv","(","  chp: chanpos(sslist(int))",", chn: channeg(sslist(int))",") : void = let","//","val opt = chanpos_list (chp)","//","in","//","case+ opt of","| chanpos_list_nil() =>","  (","    chanpos_nil_wait(chp);","    channeg_list_nil(chn); channeg_nil_close(chn)","  )","| chanpos_list_cons() =>","  (","    chanpos_send(chp, getfst(chn)); fserv(chp, chn)","  )","//","end // end of [fserv]","//","in","  channeg_create_exn(llam(chp) => fserv(chp, chn))","end // end of [ints_filter]","","(* ****** ****** *)","","extern","fun","primes_gen(): channeg(sslist(int))","","(* ****** ****** *)","","implement","primes_gen() = let","//","fun","fserv","(","  chp: chanpos(sslist(int))",", chn: channeg(sslist(int))",") : void = let","//","val opt = chanpos_list (chp)","//","in","//","case+ opt of","| chanpos_list_nil() =>","  (","    chanpos_nil_wait(chp);","    channeg_list_nil(chn); channeg_nil_close(chn)","  )","| chanpos_list_cons() => let","    val () =","      channeg_list_cons(chn)","    // end of [val]","    val p0 = channeg_send_val(chn)","  in","    chanpos_send(chp, p0); fserv(chp, ints_filter(chn, p0))","  end // end of [channeg_list_cons]","//","end // end of [fserv]","//","in","  channeg_create_exn(llam(chp) => fserv(chp, ints_from(2)))","end // end of [primes_gen]","","(* ****** ****** *)","//","extern","fun","fprint_primes","  (out: FILEref, n: int, chn: !channeg(sslist(int))): void","//","implement","fprint_primes","  (out, n, chn) =","(","if","n > 0","then let","//","val () =","  channeg_list_cons(chn)","// end of [val]","val px = channeg_send_val<int> (chn)","val () = fprintln! (out, px)","//","in","  fprint_primes (out, n-1, chn)","end // end of [then]","else () // end of [else]",") (* end of [fprint_primes] *)","//","(* ****** ****** *)","","fun","wait_for_closing","  (N: int): void = let","//","fun log (N: int, n: int, i: int): int =","  if n >= N then i else log(N, n+n, i+1)","//","fun","loop","(","  n: int",") : void =","if","n > 0","then let","  val _ = $UNISTD.usleep(250000u)","  val () = fprint(stdout_ref, \".\")","  val () = fileref_flush(stdout_ref)","in","  loop (n-1)","end (* end of [if] *)","//","val () = loop(3+log(N/8, 1, 0))","val () = fprint_newline (stdout_ref)","//","in","  // nothing","end // end of [wait_for_closing]","","(* ****** ****** *)","","implement","main0(argc, argv) =","{","//","val N =","(","//","if argc >= 2","  then g0string2int(argv[1]) else 10","//",") : int // end of [val]","//","val N = g1ofg0(N)","val () = assertloc (N >= 0)","//","val out = stdout_ref","//","val chn = primes_gen()","//","val () = fprint_primes(out, N, chn)","//","val () = channeg_list_nil(chn)","val () = channeg_nil_close(chn)","//","val () =","print!","(","  \"Waiting for the created threads to finish\"",") (* end of [val] *)","//","val () = wait_for_closing(N)","//","} (* end of [main0] *)","","(* ****** ****** *)","","(* end of [sieve.dats] *)",""]}]}],[{"group":"doc","deltas":[{"start":{"row":24,"column":9},"end":{"row":24,"column":19},"action":"remove","lines":["./../SATS/"]},{"start":{"row":24,"column":9},"end":{"row":24,"column":76},"action":"insert","lines":["/home/ubuntu/contrib/contrib/libats-/hwxi/teaching/mysession2/SATS/"]}]}],[{"group":"doc","deltas":[{"start":{"row":25,"column":9},"end":{"row":25,"column":19},"action":"remove","lines":["./../SATS/"]},{"start":{"row":25,"column":9},"end":{"row":25,"column":76},"action":"insert","lines":["/home/ubuntu/contrib/contrib/libats-/hwxi/teaching/mysession2/SATS/"]}]}],[{"group":"doc","deltas":[{"start":{"row":41,"column":13},"end":{"row":41,"column":23},"action":"remove","lines":["./../DATS/"]},{"start":{"row":41,"column":13},"end":{"row":41,"column":80},"action":"insert","lines":["/home/ubuntu/contrib/contrib/libats-/hwxi/teaching/mysession2/DATS/"]}]}],[{"group":"doc","deltas":[{"start":{"row":42,"column":13},"end":{"row":42,"column":23},"action":"remove","lines":["./../DATS/"]},{"start":{"row":42,"column":13},"end":{"row":42,"column":80},"action":"insert","lines":["/home/ubuntu/contrib/contrib/libats-/hwxi/teaching/mysession2/DATS/"]}]}],[{"group":"doc","deltas":[{"start":{"row":44,"column":13},"end":{"row":44,"column":23},"action":"remove","lines":["./../DATS/"]},{"start":{"row":44,"column":13},"end":{"row":44,"column":80},"action":"insert","lines":["/home/ubuntu/contrib/contrib/libats-/hwxi/teaching/mysession2/DATS/"]}]}],[{"group":"doc","deltas":[{"start":{"row":46,"column":21},"end":{"row":46,"column":31},"action":"remove","lines":["./../DATS/"]},{"start":{"row":46,"column":21},"end":{"row":46,"column":88},"action":"insert","lines":["/home/ubuntu/contrib/contrib/libats-/hwxi/teaching/mysession2/DATS/"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":273,"column":0},"action":"remove","lines":["(*","** Erathosthene's sieve","*)","","(* ****** ****** *)","","%{^","//","#include <pthread.h>","//","%} // end of [%{^]","","(* ****** ****** *)","//","#include","\"share/atspre_staload.hats\"","//","(* ****** ****** *)","","staload","UNISTD = \"libc/SATS/unistd.sats\"","","(* ****** ****** *)","//","staload \"/home/ubuntu/contrib/contrib/libats-/hwxi/teaching/mysession2/SATS/basis.sats\"","staload \"/home/ubuntu/contrib/contrib/libats-/hwxi/teaching/mysession2/SATS/co-list.sats\"","//","(* ****** ****** *)","","staload","_ = \"libats/DATS/deqarray.dats\"","","(* ****** ****** *)","//","staload","_ = \"libats/DATS/athread.dats\"","staload","_ = \"libats/DATS/athread_posix.dats\"","//","(* ****** ****** *)","//","staload _ = \"/home/ubuntu/contrib/contrib/libats-/hwxi/teaching/mysession2/DATS/basis_chan.dats\"","staload _ = \"/home/ubuntu/contrib/contrib/libats-/hwxi/teaching/mysession2/DATS/basis_chan2.dats\"","//","staload _ = \"/home/ubuntu/contrib/contrib/libats-/hwxi/teaching/mysession2/DATS/basis_ssntyp.dats\"","//","staload _(*anon*) = \"/home/ubuntu/contrib/contrib/libats-/hwxi/teaching/mysession2/DATS/co-list.dats\"","//","(* ****** ****** *)","//","extern","fun","ints_from (n: int): channeg(sslist(int))","//","extern","fun","ints_filter","  (channeg(sslist(int)), n: int): channeg(sslist(int))","//","(* ****** ****** *)","  ","implement","ints_from (n) = let","//","fun","fserv","(","  chp: chanpos(sslist(int)), n: int",") : void = let","//","val opt = chanpos_list (chp)","//","in","//","case+ opt of","| chanpos_list_nil() =>","    chanpos_nil_wait(chp)","| chanpos_list_cons() =>","    (chanpos_send<int>(chp, n); fserv(chp, n+1))","//","end // end of [fserv]","//","in","  channeg_create_exn(llam(chp) => fserv(chp, n))","end // end of [ints_from]","","(* ****** ****** *)","","implement","ints_filter","  (chn, n) = let","//","fun","getfst","(","  chn: !channeg(sslist(int))",") : int = let","//","val () = channeg_list_cons(chn)","val fst = channeg_send_val(chn)","//","in","  if fst mod n > 0 then fst else getfst(chn)","end // end of [getfst]","//","fun","fserv","(","  chp: chanpos(sslist(int))",", chn: channeg(sslist(int))",") : void = let","//","val opt = chanpos_list (chp)","//","in","//","case+ opt of","| chanpos_list_nil() =>","  (","    chanpos_nil_wait(chp);","    channeg_list_nil(chn); channeg_nil_close(chn)","  )","| chanpos_list_cons() =>","  (","    chanpos_send(chp, getfst(chn)); fserv(chp, chn)","  )","//","end // end of [fserv]","//","in","  channeg_create_exn(llam(chp) => fserv(chp, chn))","end // end of [ints_filter]","","(* ****** ****** *)","","extern","fun","primes_gen(): channeg(sslist(int))","","(* ****** ****** *)","","implement","primes_gen() = let","//","fun","fserv","(","  chp: chanpos(sslist(int))",", chn: channeg(sslist(int))",") : void = let","//","val opt = chanpos_list (chp)","//","in","//","case+ opt of","| chanpos_list_nil() =>","  (","    chanpos_nil_wait(chp);","    channeg_list_nil(chn); channeg_nil_close(chn)","  )","| chanpos_list_cons() => let","    val () =","      channeg_list_cons(chn)","    // end of [val]","    val p0 = channeg_send_val(chn)","  in","    chanpos_send(chp, p0); fserv(chp, ints_filter(chn, p0))","  end // end of [channeg_list_cons]","//","end // end of [fserv]","//","in","  channeg_create_exn(llam(chp) => fserv(chp, ints_from(2)))","end // end of [primes_gen]","","(* ****** ****** *)","//","extern","fun","fprint_primes","  (out: FILEref, n: int, chn: !channeg(sslist(int))): void","//","implement","fprint_primes","  (out, n, chn) =","(","if","n > 0","then let","//","val () =","  channeg_list_cons(chn)","// end of [val]","val px = channeg_send_val<int> (chn)","val () = fprintln! (out, px)","//","in","  fprint_primes (out, n-1, chn)","end // end of [then]","else () // end of [else]",") (* end of [fprint_primes] *)","//","(* ****** ****** *)","","fun","wait_for_closing","  (N: int): void = let","//","fun log (N: int, n: int, i: int): int =","  if n >= N then i else log(N, n+n, i+1)","//","fun","loop","(","  n: int",") : void =","if","n > 0","then let","  val _ = $UNISTD.usleep(250000u)","  val () = fprint(stdout_ref, \".\")","  val () = fileref_flush(stdout_ref)","in","  loop (n-1)","end (* end of [if] *)","//","val () = loop(3+log(N/8, 1, 0))","val () = fprint_newline (stdout_ref)","//","in","  // nothing","end // end of [wait_for_closing]","","(* ****** ****** *)","","implement","main0(argc, argv) =","{","//","val N =","(","//","if argc >= 2","  then g0string2int(argv[1]) else 10","//",") : int // end of [val]","//","val N = g1ofg0(N)","val () = assertloc (N >= 0)","//","val out = stdout_ref","//","val chn = primes_gen()","//","val () = fprint_primes(out, N, chn)","//","val () = channeg_list_nil(chn)","val () = channeg_nil_close(chn)","//","val () =","print!","(","  \"Waiting for the created threads to finish\"",") (* end of [val] *)","//","val () = wait_for_closing(N)","//","} (* end of [main0] *)","","(* ****** ****** *)","","(* end of [sieve.dats] *)",""]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"insert","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":1,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":2,"column":0},"end":{"row":3,"column":27},"action":"insert","lines":["#include","\"share/atspre_staload.hats\""]}]}],[{"group":"doc","deltas":[{"start":{"row":2,"column":0},"end":{"row":3,"column":27},"action":"remove","lines":["#include","\"share/atspre_staload.hats\""]},{"start":{"row":2,"column":0},"end":{"row":2,"column":36},"action":"insert","lines":["#include \"share/atspre_staload.hats\""]}]}],[{"group":"doc","deltas":[{"start":{"row":2,"column":36},"end":{"row":3,"column":0},"action":"insert","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"insert","lines":["staload \"{$ZEROMQ}/SATS/zmq.sats\"",""]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":9},"end":{"row":3,"column":18},"action":"remove","lines":["{$ZEROMQ}"]},{"start":{"row":3,"column":9},"end":{"row":3,"column":10},"action":"insert","lines":["m"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":10},"end":{"row":3,"column":11},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":11},"end":{"row":3,"column":12},"action":"insert","lines":["k"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":11},"end":{"row":3,"column":12},"action":"remove","lines":["k"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":10},"end":{"row":3,"column":11},"action":"remove","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":9},"end":{"row":3,"column":10},"action":"remove","lines":["m"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":9},"end":{"row":3,"column":10},"action":"insert","lines":["h"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":10},"end":{"row":3,"column":11},"action":"insert","lines":["w"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":11},"end":{"row":3,"column":12},"action":"insert","lines":["w"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":12},"end":{"row":3,"column":13},"action":"insert","lines":["u"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":13},"end":{"row":3,"column":14},"action":"insert","lines":["/"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":13},"end":{"row":3,"column":14},"action":"remove","lines":["/"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":12},"end":{"row":3,"column":13},"action":"remove","lines":["u"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":11},"end":{"row":3,"column":12},"action":"remove","lines":["w"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":10},"end":{"row":3,"column":11},"action":"remove","lines":["w"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":9},"end":{"row":3,"column":10},"action":"remove","lines":["h"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":9},"end":{"row":3,"column":10},"action":"insert","lines":["/"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":10},"end":{"row":3,"column":11},"action":"insert","lines":["h"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":11},"end":{"row":3,"column":12},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":12},"end":{"row":3,"column":13},"action":"insert","lines":["m"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":13},"end":{"row":3,"column":14},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":14},"end":{"row":3,"column":15},"action":"insert","lines":["/"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":15},"end":{"row":3,"column":16},"action":"insert","lines":["u"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":16},"end":{"row":3,"column":17},"action":"insert","lines":["b"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":17},"end":{"row":3,"column":18},"action":"insert","lines":["u"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":18},"end":{"row":3,"column":19},"action":"insert","lines":["n"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":19},"end":{"row":3,"column":20},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":20},"end":{"row":3,"column":21},"action":"insert","lines":["u"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":21},"end":{"row":3,"column":22},"action":"insert","lines":["/"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":22},"end":{"row":3,"column":23},"action":"insert","lines":["c"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":23},"end":{"row":3,"column":24},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":24},"end":{"row":3,"column":25},"action":"insert","lines":["n"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":25},"end":{"row":3,"column":26},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":26},"end":{"row":3,"column":27},"action":"insert","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":27},"end":{"row":3,"column":28},"action":"insert","lines":["i"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":28},"end":{"row":3,"column":29},"action":"insert","lines":["b"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":29},"end":{"row":3,"column":30},"action":"insert","lines":["/"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":30},"end":{"row":3,"column":31},"action":"insert","lines":["c"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":31},"end":{"row":3,"column":32},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":32},"end":{"row":3,"column":33},"action":"insert","lines":["n"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":33},"end":{"row":3,"column":34},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":34},"end":{"row":3,"column":35},"action":"insert","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":35},"end":{"row":3,"column":36},"action":"insert","lines":["i"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":36},"end":{"row":3,"column":37},"action":"insert","lines":["b"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":37},"end":{"row":3,"column":38},"action":"insert","lines":["/"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":38},"end":{"row":3,"column":39},"action":"insert","lines":["z"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":39},"end":{"row":3,"column":40},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":40},"end":{"row":3,"column":41},"action":"insert","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":41},"end":{"row":3,"column":42},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":42},"end":{"row":3,"column":43},"action":"insert","lines":["m"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":43},"end":{"row":3,"column":44},"action":"insert","lines":["q"]}]}],[{"group":"doc","deltas":[{"start":{"row":2,"column":36},"end":{"row":3,"column":0},"action":"insert","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":5,"column":0},"end":{"row":6,"column":0},"action":"insert","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":6,"column":0},"end":{"row":7,"column":0},"action":"insert","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":7,"column":0},"end":{"row":18,"column":22},"action":"insert","lines":["implement","main0 () =","{","//","var major: int","and minor: int","and patch: int","val () = zmq_version(major, minor, patch)","//","val () = println! (\"Installed ZeroMQ version: \", major, \".\", minor, \".\", patch)","//","} (* end of [main0] *)"]}]}],[{"group":"doc","deltas":[{"start":{"row":9,"column":0},"end":{"row":11,"column":0},"action":"remove","lines":["{","//",""]},{"start":{"row":9,"column":0},"end":{"row":10,"column":0},"action":"insert","lines":["{ //",""]}]}],[{"group":"doc","deltas":[{"start":{"row":9,"column":2},"end":{"row":9,"column":3},"action":"remove","lines":["/"]}]}],[{"group":"doc","deltas":[{"start":{"row":9,"column":2},"end":{"row":9,"column":3},"action":"remove","lines":["/"]}]}],[{"group":"doc","deltas":[{"start":{"row":8,"column":10},"end":{"row":8,"column":11},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":8,"column":11},"end":{"row":8,"column":12},"action":"insert","lines":[")"]}]}],[{"group":"doc","deltas":[{"start":{"row":8,"column":12},"end":{"row":8,"column":13},"action":"insert","lines":["_"]}]}],[{"group":"doc","deltas":[{"start":{"row":8,"column":13},"end":{"row":8,"column":14},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":8,"column":13},"end":{"row":8,"column":14},"action":"remove","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":8,"column":12},"end":{"row":8,"column":13},"action":"remove","lines":["_"]}]}],[{"group":"doc","deltas":[{"start":{"row":8,"column":11},"end":{"row":8,"column":12},"action":"remove","lines":[")"]}]}],[{"group":"doc","deltas":[{"start":{"row":8,"column":11},"end":{"row":8,"column":12},"action":"insert","lines":["("]}]}],[{"group":"doc","deltas":[{"start":{"row":8,"column":12},"end":{"row":8,"column":13},"action":"insert","lines":[")"]}]}],[{"group":"doc","deltas":[{"start":{"row":8,"column":13},"end":{"row":8,"column":14},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":8,"column":14},"end":{"row":8,"column":15},"action":"insert","lines":["w"]}]}],[{"group":"doc","deltas":[{"start":{"row":8,"column":15},"end":{"row":8,"column":16},"action":"insert","lines":["h"]}]}],[{"group":"doc","deltas":[{"start":{"row":8,"column":16},"end":{"row":8,"column":17},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":8,"column":17},"end":{"row":8,"column":18},"action":"insert","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":8,"column":18},"end":{"row":8,"column":19},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":8,"column":19},"end":{"row":8,"column":20},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":8,"column":20},"end":{"row":9,"column":0},"action":"remove","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":9,"column":0},"end":{"row":9,"column":2},"action":"insert","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":10,"column":0},"end":{"row":10,"column":2},"action":"insert","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":11,"column":0},"end":{"row":11,"column":2},"action":"insert","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":12,"column":0},"end":{"row":12,"column":2},"action":"insert","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":13,"column":0},"end":{"row":14,"column":0},"action":"remove","lines":["//",""]}]}],[{"group":"doc","deltas":[{"start":{"row":13,"column":0},"end":{"row":13,"column":2},"action":"insert","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":14,"column":1},"end":{"row":14,"column":2},"action":"remove","lines":["/"]}]}],[{"group":"doc","deltas":[{"start":{"row":14,"column":0},"end":{"row":14,"column":1},"action":"remove","lines":["/"]}]}],[{"group":"doc","deltas":[{"start":{"row":15,"column":1},"end":{"row":15,"column":22},"action":"remove","lines":[" (* end of [main0] *)"]}]}],[{"group":"doc","deltas":[{"start":{"row":13,"column":81},"end":{"row":14,"column":0},"action":"remove","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":11,"column":16},"end":{"row":12,"column":0},"action":"insert","lines":["",""]},{"start":{"row":12,"column":0},"end":{"row":12,"column":2},"action":"insert","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":7,"column":0},"end":{"row":9,"column":0},"action":"remove","lines":["implement","main0 () = () where { ",""]},{"start":{"row":7,"column":0},"end":{"row":8,"column":0},"action":"insert","lines":["implement main0 () = () where {",""]}]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":0,"column":0},"end":{"row":14,"column":1},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1426100447000,"hash":"4515079b7b9b0fbdfd0441328af74f54c47284a8"}